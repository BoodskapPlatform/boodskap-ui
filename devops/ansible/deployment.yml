---
-
  hosts: haproxy1
  tasks:
    - name: Git checkout
      ansible.builtin.git:
        repo: 'https://github.com/BoodskapPlatform/boodskap-ui.git'
        clone: yes
        accept_newhostkey: yes
        dest: /home/ubuntu/build/boodskap-ui
        version: v5.0
        force: yes
        single_branch: yes
      register: gitoutput

    - debug: msg="{{ gitoutput.stdout }}"
    
    - 
      name: Branch status.
      command: git branch
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: branch_output

    - debug: msg="{{ branch_output.stdout }}"

    - 
      name: This command will install dependencies.
      command: npm install
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: dependencies_output

    - debug: msg="{{ dependencies_output.stdout }}"

    - 
      name: Changing the version and Push the code.
      shell: "sh package_version.sh"
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: dependencies_output

    - debug: msg="{{ dependencies_output.stdout }}"

    -
      name: Docker build change mode to executable.
      shell: "chmod +x build.sh"
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: change_buildscript_mode_output

    - debug: msg="{{ change_buildscript_mode_output.stdout }}"

    -
      name: Docker build change mode to executable.
      shell: "sh build.sh"
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: run_build_script_output
    - debug: msg="{{ run_build_script_output.stdout }}"

    - name: Sleep for 10 seconds 
      wait_for:
        timeout: 10
      delegate_to: 127.0.0.1
    -
      name: Docker Push the latest image.
      shell: "sh push.sh"
      args:
        chdir: /home/ubuntu/build/boodskap-ui
      register: run_build_script_output
    - debug: msg="{{ run_build_script_output.stdout }}"

- hosts: v5Dev
  tasks:
     -
       name: Deploy the container image.
       shell: "sh deploy.sh {{ DOCKER_IMG }}"
       args:
         chdir: /home/ubuntu/cluster/ui
       register: deploy_container_output
     - debug: msg="{{ deploy_container_output.stdout }}" 
     - debug: msg="{{ DOCKER_IMG }}"