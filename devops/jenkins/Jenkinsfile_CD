pipeline{
    agent any
     options{          
                       //retry(3)
                      buildDiscarder(logRotator(numToKeepStr:'10'))   // last 10 build log only display.
                      disableConcurrentBuilds()  // it will disable the concurrent builds.
                      timeout(time: 20, unit: 'MINUTES') // build timeout aftrer 30 minutes.
                      timestamps() // show time in output console
             }
     parameters {  //getting values from CI job and the values are stored in name parameter.
        string(name: 'JOBNAME', description: 'Job name ')
        string(name: 'BUILDNUM', description: 'buildnumber')
        string(name: 'BUILDURL', description: 'build url link')
        string(name: 'BUILDSTATUS', description: 'build url link')
        string(name: 'To_Address', description: 'build url link')
        string(name: 'CC_Address', description: 'add toaddress')
      }
    stages{
        stage("Deploy"){
            steps{
                script{
        echo "####################Deployment Block###############################"
        //executing the ansible playbook for deployment with target machine (inventory file)
            sh """
            ansible-playbook $WORKSPACE/devops/ansible/deployment.yml -i $WORKSPACE/devops/ansible/inventory_deploy.yml --extra-vars=DOCKER_IMG="{$(cat package.json | /usr/bin/jq -r '.version')}"
             """

            echo "Deployment job done"
    
                }
                 
            }
        }
    }
    post{
        always{
            script{
        echo "##############Email Notification for CD job##################"
        mail bcc: '', body: "Build URL: $BUILD_URL", cc: "$CC_Address", from: 'subosand@boodskap.io', replyTo: '', subject: " Build Number: $BUILD_NUMBER Build Status: ${currentBuild.result} Project Name : $JOB_NAME", to: "$To_Address"
           }
        }
    }
}       

